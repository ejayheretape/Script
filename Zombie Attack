local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")

local lp = Players.LocalPlayer
local cam = workspace.CurrentCamera

local ui = Instance.new("ScreenGui", game.CoreGui)
ui.ResetOnSpawn = false

local frame = Instance.new("Frame", ui)
frame.Size = UDim2.new(0, 180, 0, 60)
frame.Position = UDim2.new(0.05, 0, 0.82, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local corner = Instance.new("UICorner", frame)
corner.CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(0.65, -8, 1, 0)
title.Position = UDim2.new(0.04, 0, 0, 0)
title.Text = "Auto Farm"
title.Font = Enum.Font.GothamSemibold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(230, 230, 255)
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left

local toggleBtn = Instance.new("TextButton", frame)
toggleBtn.Size = UDim2.new(0, 60, 0, 28)
toggleBtn.Position = UDim2.new(0.68, 0, 0.36, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleBtn.BorderSizePixel = 0
toggleBtn.AutoButtonColor = false
local togCorner = Instance.new("UICorner", toggleBtn)
togCorner.CornerRadius = UDim.new(1, 0)

local knob = Instance.new("Frame", toggleBtn)
knob.Size = UDim2.new(0, 26, 0, 26)
knob.Position = UDim2.new(0, 2, 0, 1)
knob.BackgroundColor3 = Color3.fromRGB(235, 235, 235)
local kCorner = Instance.new("UICorner", knob)
kCorner.CornerRadius = UDim.new(1, 0)

local togGrad = Instance.new("UIGradient", toggleBtn)
togGrad.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(110, 0, 210)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 0, 80))
}
togGrad.Enabled = false

local mainGrad = Instance.new("UIGradient", frame)
mainGrad.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 0, 70)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 0, 20))
}
mainGrad.Rotation = 270

local active = false
local orbitRadius = 10
local orbitHeight = 8
local orbitSpeed = 4
local hitboxSize = 7

local function setToggle(v)
    active = v
    if active then
        togGrad.Enabled = true
        TweenService:Create(toggleBtn, TweenInfo.new(0.18), {BackgroundColor3 = Color3.fromRGB(120, 0, 180)}):Play()
        TweenService:Create(knob, TweenInfo.new(0.18), {Position = UDim2.new(1, -28, 0, 1)}):Play()
    else
        togGrad.Enabled = false
        TweenService:Create(toggleBtn, TweenInfo.new(0.18), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
        TweenService:Create(knob, TweenInfo.new(0.18), {Position = UDim2.new(0, 2, 0, 1)}):Play()
    end
end

toggleBtn.MouseButton1Click:Connect(function()
    setToggle(not active)
end)

local function getNearest()
    if not lp.Character or not lp.Character:FindFirstChild("Head") then return nil end
    local nearest, best = nil, math.huge
    local function scan(folder)
        if not folder then return end
        for _, v in ipairs(folder:GetChildren()) do
            if v and v:FindFirstChild("Head") and v:FindFirstChild("HumanoidRootPart") then
                local ok, d = pcall(function()
                    return (lp.Character.Head.Position - v.Head.Position).Magnitude
                end)
                if ok and d and d < best then
                    best = d
                    nearest = v
                end
            end
        end
    end
    scan(workspace:FindFirstChild("enemies"))
    scan(workspace:FindFirstChild("BossFolder"))
    return nearest
end

task.spawn(function()
    while task.wait(0.3) do
        local enemies = workspace:FindFirstChild("enemies")
        if enemies then
            for _, mob in ipairs(enemies:GetChildren()) do
                if mob and mob:FindFirstChild("HumanoidRootPart") then
                    pcall(function()
                        mob.HumanoidRootPart.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
                        mob.HumanoidRootPart.Transparency = 1
                        mob.HumanoidRootPart.CanCollide = false
                    end)
                end
            end
        end
    end
end)

task.spawn(function()
    while task.wait(1) do
        if lp and lp.Character and lp.Backpack then
            local equipped = lp.Character:FindFirstChildOfClass("Tool")
            if not equipped then
                for _, tool in ipairs(lp.Backpack:GetChildren()) do
                    if tool:IsA("Tool") then
                        pcall(function() tool.Parent = lp.Character end)
                        break
                    end
                end
            end
        end
    end
end)

local angle = 0
task.spawn(function()
    while true do
        if active and lp.Character then
            local target = getNearest()
            if target and target:FindFirstChild("HumanoidRootPart") and target:FindFirstChild("Head") then
                angle = angle + orbitSpeed * 0.03
                local cx, cz = math.cos(angle) * orbitRadius, math.sin(angle) * orbitRadius
                local pos = target.HumanoidRootPart.Position + Vector3.new(cx, orbitHeight, cz)
                pcall(function()
                    lp.Character.HumanoidRootPart.CFrame = CFrame.new(pos, target.Head.Position)
                end)
            end
        end
        task.wait(0.03)
    end
end)

task.spawn(function()
    while true do
        if active and lp.Character and lp.Character:FindFirstChildOfClass("Tool") then
            local target = getNearest()
            if target and target:FindFirstChild("Head") and ReplicatedStorage:FindFirstChild("Gun") then
                pcall(function()
                    ReplicatedStorage.Gun:FireServer({
                        Direction = target.Head.Position,
                        Name = lp.Character:FindFirstChildOfClass("Tool").Name,
                        Hit = target.Head,
                        Origin = target.Head.Position,
                        Pos = target.Head.Position
                    })
                end)
            end
        end
        task.wait(0.05)
    end
end)

RunService.RenderStepped:Connect(function()
    if active then
        local t = getNearest()
        if t and t:FindFirstChild("Head") then
            pcall(function()
                cam.CFrame = CFrame.new(cam.CFrame.Position, t.Head.Position)
            end)
        end
    end
end)
